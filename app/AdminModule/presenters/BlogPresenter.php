<?php
/**
 * Created by PhpStorm.
 * User: altisek
 * Date: 29.01.2017
 * Time: 21:27
 */

namespace AdminModule;


use Nette;
use Nette\Application\UI\Form;
use Nette\Security\User;

class BlogPresenter extends BasePresenter
{
    /** @var  User */
    private $user;

    public function __construct(Nette\Database\Context $database, User $user)
    {
        parent::__construct($database);
        $this->user = $user;
    }
    protected function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
        $id = $this->user->getId();
        $pex = $this->database->table('permissions')->get($id);
        if($pex->blog === 0)
        {
            $this->flashMessage('Nemáte oprávnění k novinkám','danger');
            $this->redirect('Homepage:default');
        }else {

        }
    }

    public function renderDefault()
    {
        $this->template->blogs = $this->database->table('blog')->order('id DESC');
    }

    public function renderNew()
    {

    }

    public function renderEdit($id)
    {
        $post = $this->database->table('blog')->get($id);
        if(!$post)
        {
            $this->flashMessage('Příspěvek neexistuje','danger');
            $this->redirect(':Admin:Blog:default');
        } else {
            $this['editorBlogForm']->setDefaults($post->toArray());
            $this->template->data = $post;
        }
    }

    protected function createComponentBlogForm()
    {
        $form = new Form();
        $form->addText('title', 'Název:')
            ->addRule(Form::REQUIRED, 'Musíte napsat titulek');
        $form->addTextArea('body', 'Článek')
            ->addRule(Form::REQUIRED, 'Musíte napsat článek');
        $form->addSubmit('send', 'Odeslat');
        $form->onSuccess[] = array($this, 'BlogSubmitted');
        return $form;
    }

    protected function createComponentEditorBlogForm()
    {
        $form = new Form();
        $form->addText('title', 'Název:')
            ->addRule(Form::REQUIRED, 'Musíte napsat titulek');
        $form->addTextArea('body', 'Článek')
            ->addRule(Form::REQUIRED, 'Musíte napsat článek');
        $form->addSubmit('send', 'Odeslat');
        $form->onSuccess[] = array($this, 'BlogSubmitted');
        return $form;
    }

    public function BlogSubmitted(Form $form)
    {
        $values = $form->getValues();
        $id = $this->getParameter('id');
        if ($id) {
            $post = $this->database->table('blog')->get($id);
            $post->update($values);
            $this->flashMessage('Příspěvek byl aktualizovaný', 'success');
            $this->redirect(':Admin:Blog:default');
        } else {
            $this->database->table('blog')->insert(array(
                'autor' => $this->user->getId(),
                'title' => $values->title,
                'date' => new Nette\Utils\DateTime('now'),
                'body' => $values->body
            ));
            $this->flashMessage('Příspěvek byl úspěšně přidaný', 'success');
            $this->redirect(':Admin:Blog:default');
        }
    }
    public function handleDelete($id)
    {
        $this->template->blogs = $this->database->table('blog')->order('id DESC');
        $ids = $this->database->table('blog')->get($id);
        if(!$id)
        {
            $this->flashMessage('Příspěvek neexistuje','danger');
            $this->redirect(':Admin:Blog:default');
        } else {
            $this->database->table('blog')->where('id = ?', $id)->delete();
            if($this->isAjax())
            {
                $this->redrawControl('bloglist');
            }else{
                $this->redirect(':Admin:Blog:default');
            }
        }
    }
}


